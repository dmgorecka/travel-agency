{"ast":null,"code":"import { combineReducers, createStore } from 'redux';\nimport tripList from '../data/trips.json';\nimport globalReducer from './globalRedux';\nimport filtersReducer from './filtersRedux'; // define initial state and shallow-merge initial data\n\nconst initialState = {\n  trips: tripList,\n  countries: {},\n  regions: {},\n  subregions: {},\n  tags: {},\n  filters: {\n    searchPhrase: '',\n    tags: [],\n    duration: {\n      from: 1,\n      to: 14\n    }\n  }\n}; // define reducers\n\nconst reducers = {\n  filters: filtersReducer\n}; // add blank reducers for initial state properties without reducers\n\nObject.keys(initialState).forEach(item => {\n  if (typeof reducers[item] == 'undefined') {\n    reducers[item] = (statePart = null) => statePart;\n  }\n}); // combine reducers\n\nconst combinedReducers = combineReducers(reducers); // merge all reducers with globalReducer\n\nconst storeReducer = (state, action) => {\n  const modifiedState = globalReducer(state, action);\n  return combinedReducers(modifiedState, action);\n}; // create store\n\n\nconst store = createStore(storeReducer, initialState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nexport default store;","map":{"version":3,"sources":["/Users/dariagorecka/Documents/KODILLA/travel-agency/src/redux/store.js"],"names":["combineReducers","createStore","tripList","globalReducer","filtersReducer","initialState","trips","countries","regions","subregions","tags","filters","searchPhrase","duration","from","to","reducers","Object","keys","forEach","item","statePart","combinedReducers","storeReducer","state","action","modifiedState","store","window","__REDUX_DEVTOOLS_EXTENSION__"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,OAAOC,aAAP,MAA0B,eAA1B;AACA,OAAOC,cAAP,MAA2B,gBAA3B,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEJ,QADY;AAEnBK,EAAAA,SAAS,EAAE,EAFQ;AAGnBC,EAAAA,OAAO,EAAE,EAHU;AAInBC,EAAAA,UAAU,EAAE,EAJO;AAKnBC,EAAAA,IAAI,EAAE,EALa;AAMnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,YAAY,EAAE,EADP;AAEPF,IAAAA,IAAI,EAAE,EAFC;AAGPG,IAAAA,QAAQ,EAAE;AACRC,MAAAA,IAAI,EAAE,CADE;AAERC,MAAAA,EAAE,EAAE;AAFI;AAHH;AANU,CAArB,C,CAgBA;;AACA,MAAMC,QAAQ,GAAG;AACfL,EAAAA,OAAO,EAAEP;AADM,CAAjB,C,CAIA;;AACAa,MAAM,CAACC,IAAP,CAAYb,YAAZ,EAA0Bc,OAA1B,CAAkCC,IAAI,IAAI;AACxC,MAAI,OAAOJ,QAAQ,CAACI,IAAD,CAAf,IAAyB,WAA7B,EAA0C;AACxCJ,IAAAA,QAAQ,CAACI,IAAD,CAAR,GAAiB,CAACC,SAAS,GAAG,IAAb,KAAsBA,SAAvC;AACD;AACF,CAJD,E,CAMA;;AACA,MAAMC,gBAAgB,GAAGtB,eAAe,CAACgB,QAAD,CAAxC,C,CAEA;;AACA,MAAMO,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,QAAMC,aAAa,GAAGvB,aAAa,CAACqB,KAAD,EAAQC,MAAR,CAAnC;AACA,SAAOH,gBAAgB,CAACI,aAAD,EAAgBD,MAAhB,CAAvB;AACD,CAHD,C,CAKA;;;AACA,MAAME,KAAK,GAAG1B,WAAW,CACvBsB,YADuB,EAEvBlB,YAFuB,EAGvBuB,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAHhB,CAAzB;AAMA,eAAeF,KAAf","sourcesContent":["import {combineReducers, createStore} from 'redux';\nimport tripList from '../data/trips.json';\n\nimport globalReducer from './globalRedux';\nimport filtersReducer from './filtersRedux';\n\n// define initial state and shallow-merge initial data\nconst initialState = {\n  trips: tripList,\n  countries: {},\n  regions: {},\n  subregions: {},\n  tags: {},\n  filters: {\n    searchPhrase: '',\n    tags: [],\n    duration: {\n      from: 1,\n      to: 14,\n    },\n  },\n};\n\n// define reducers\nconst reducers = {\n  filters: filtersReducer,\n};\n\n// add blank reducers for initial state properties without reducers\nObject.keys(initialState).forEach(item => {\n  if (typeof reducers[item] == 'undefined') {\n    reducers[item] = (statePart = null) => statePart;\n  }\n});\n\n// combine reducers\nconst combinedReducers = combineReducers(reducers);\n\n// merge all reducers with globalReducer\nconst storeReducer = (state, action) => {\n  const modifiedState = globalReducer(state, action);\n  return combinedReducers(modifiedState, action);\n};\n\n// create store\nconst store = createStore(\n  storeReducer,\n  initialState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}